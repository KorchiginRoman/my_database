DROP DATABASE IF EXISTS home_library;
CREATE DATABASE home_library;
USE home_library;

-- У каждой книги есть издательство, которое его опубликовало. 

DROP TABLE IF EXISTS publishing_house;
CREATE TABLE publishing_house (
	id SERIAL PRIMARY KEY,
	name VARCHAR(50),
	city VARCHAR(50)
	);

INSERT INTO 
	publishing_house (name, city)
	VALUES
	('Иностранка', 'Москва'), ('Вече', 'Москва'), ('АСТ', 'Москва'), ('Азбука', 'Санкт-Петербург'), ('Эксмо', 'Москва'),
	('Захаров', 'Москва'), ('Питер', 'Санкт-Петербург');

-- Есть владелец, которую эту книгу купил.

DROP TABLE IF EXISTS owner;
	CREATE TABLE owner (
	id SERIAL PRIMARY KEY,
	name VARCHAR(100),
	lastname VARCHAR(100),
	INDEX owner_name_lastname_idx(name, lastname)
);

INSERT INTO 
	owner (name, lastname)
	VALUES
	('Роман', 'Корчигин'), ('Ирина', 'Долгинцева'), ('Марина', 'Долгинцева'), ('Ксения', 'Рогачёва'),
	('Виктория', 'Черница'), ('Елена', 'Позднякова'), ('Дмитрий', 'Ильюхин'), ('Виктор', 'Глушак'),
	('Константин', 'Харлашин'), ('Владимир', 'Мосин');

-- Конечно же есть автор, которую эту книгу написал. 

DROP TABLE IF EXISTS author;
CREATE TABLE author(
	id SERIAL PRIMARY KEY,
	name VARCHAR(100));

INSERT INTO 
	author (name)
	VALUES
	('Томас Майн Рид'), ('Стивен Кинг'), ('Рекс Стаут'), ('Джордж Оруэлл'), ('Ю Несбё'),
	('Анри де Кок'), ('Жюль Верн'), ('Джеймс Лусено'), ('Олег Рой'), ('Александр Дюма'),
	('Поль Феваль'), ('Джозеф Конрад'), ('Пьер Алексис Понсон дю Террайль'), ('Борис Акунин'), ('Агата Кристи'),
	('Юрий Никитин'), ('Юрий Молчанов'), ('Шарлотта Бронте'), ('Оноре Де Бальзак'), ('Эдгар Райс Берроуз'),
	('Глен Кук'), ('Валентин Саввич Пикуль'), ('Майкл Стэкпол'), ('Генри Райдер Хаггард'), ('Артур Конан Дойл'),
	('Дмитрий Гаврилов'), ('Андре Лори'), ('Эмилио Сальгари'), ('Роберт Луис Стивенсон'), ('Адитья Бхаргава'),
	('Рафаэль Сабатини');

-- Очень часто книги обьединяются в серии издательства.

DROP TABLE IF EXISTS book_series;
CREATE TABLE book_series(
	id SERIAL PRIMARY KEY,
	name VARCHAR(150));

INSERT INTO 
	book_series (name)
	VALUES
	('Темная башня'), ('Мастера приключений'), ('Иностранная литература. Большие книги'), ('Иностранная литература. Классика детектива'), ('Звёзды мирового детектива'),
	('Звездные Войны'), ('Капризы и странности судьбы. Романы О. Роя'), ('Всемирная детская классика'), ('Зарубежная классика'), ('Иллюстрированное собрание сочинений'),
	('Новый детективъ'), ('Трое из леса возвращаются'), ('Мир приключений'), ('Библиотека программиста');

-- Книги домашней библиотеки. 

DROP TABLE IF EXISTS books;
CREATE TABLE books (
	id SERIAL PRIMARY KEY,
	title VARCHAR(100),
	book_series_id  BIGINT UNSIGNED,
	publishing_house_id BIGINT UNSIGNED,
	pages INT,
	owner_id BIGINT UNSIGNED,
	price INT UNSIGNED,
	FOREIGN KEY (publishing_house_id) REFERENCES publishing_house(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (book_series_id) REFERENCES book_series(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (owner_id) REFERENCES owner(id) ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO 
	books (title, book_series_id, publishing_house_id, pages, owner_id, price)
	VALUES
	('Лига перепуганных мужчин', 4, 1, 704, 1, 0), ('1984. Скотный двор. Романы. Повесть', 3, 1, 768, 1, 0), ('Пиратский остров', 2, 2, 480, 1, 0), ('Чужак', 1, 3, 576, 1, 181), ('Блейз', 1, 3, 352, 1, 340),
	('Нетопырь', 5, 4, 352, 4, 395), ('Тараканы', 5, 4, 384, 4, 400), ('Черные орхидеи', 4, 1, 608, 1, 358), ('Гостиница тринадцати повешенных', 2, 2, 448, 1, 400), ('Граф де Шантелен', 2, 2, 448, 1, 0),
	('Дарт Плэгас', 6, 4, 448, 1, 0), ('Писатель и балерина', 7, 5, 352, 2, 0), ('Дети капитана Гранта', 8, 5, 640, 3, 0), ('Сорок пять', 9, 5, 768, 1, 0), ('Сказки Арамиса', 10, 2, 480, 1, 223), 
	('Красношейка', 5, 4, 480, 4, 400), ('Михаил Строгов, или курьер царя', 2, 2, 480, 1, 0), ('Горбун. роман в 2т. T.1.Удар Невера', 2, 2, 448, 1, 351), ('Горбун. роман в 2т. T.2.Клятва Лагардера', 2, 2, 512, 1, 351 ), ('Романтические приключения Джона Кемпа', 2, 2, 448, 1, 397),
	('Капитан черных грешников', 2, 2, 416, 1, 400),
	('Жребий Салема', 1, 3, 544, 1, 600),
	('Пентаграмма', 5, 4, 448, 1, 500),
	('Коронация', 11, 6, 368, 1, 0 ),
	('Любовница смерти', 11, 6, 272, 1, 244 ),
	('Убийство в «Восточном экспрессе»', 9, 5, 608, 1, 0),
	('Таргитай', 12, 2, 352, 1, 410),
	('Изгнанники', 2, 2, 512, 1, 0),
	('Яфет', 12, 2, 320, 1, 0),
	('Мистер Мерседес', 1, 3, 479, 1, 0),
	('Морской волчонок', 2, 2, 448, 1, 400),
	('Ледяной сфинкс', 2, 2, 480, 1, 410),
	('Вещий Олег', 12, 2, 368, 1, 400),
	('Тайна мага', 2, 2, 448, 1, 400),
	('Черный Корсар. Королева карибов. Иоланда, дочь Черного Корсара', 13, 4, 832, 1, 0),
	('Корсары Южных морей: романы', 13, 4, 640, 1, 0),
	('Корсиканские братья', 10, 2, 480, 1, 400),
	('Робин Гуд', 10, 2, 544, 1, 550),
	('Похищенный', 2, 2, 608, 1, 290),
	('Грокаем алгоритмы', 14, 7, 288, 1, 772),
	('Три двери смерти', 4, 4, 672, 1, 400),
	('Великолепная Ориноко', 2, 2, 608, 1, 300),
	('Скарамуш', 2, 3, 512, 1, 428);

/* Дополнительный характеристики, на которые очень часто не обращают внимание.
1. isbn - Международный стандартный книжный номер — уникальный номер книжного издания,
необходимый для распространения книги в торговых сетях и автоматизации работы с изданием.
2.Универса́льная десяти́чная классифика́ция (УДК) — система классификации информации,
 широко используется во всём мире для систематизации произведений науки, литературы и искусства,
 периодической печати, различных видов документов и организации картотек.
3. Библиотечно-библиографическая классификация (ББК) — национальная классификационная система России. */

DROP TABLE IF EXISTS info;
CREATE TABLE info (
	books_id SERIAL PRIMARY KEY,
	isbn BIGINT UNSIGNED UNIQUE,
	UDC VARCHAR(100),
	BBK VARCHAR(50),
	FOREIGN KEY (books_id) REFERENCES books(id) ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO 
	info (isbn, UDC, BBK)
	VALUES
	(9785389140875, '821.111(73)', '84(7Сое)-44'), (9785389190832, '821.111', '84(4Вел)-44'), (9785444466810, '821.111.1-311.3', '84(4Вел)'), (9785171101701, '821.111-313.2(73)', '84(7Сое)-44'), (9785171446710, '821.111-312.4(73)', '84(7Сое)-44'),
	(9785389128682, '821.135.5-312 Несбё', '84(4Нор)-44'),
	(9785389130234, '821.135.5-312 Несбё', '84(4Нор)-44'),
	(9785389145313, '821.111(73)', '84(7Сое)-44'),
	(9785448432460, '821.133.1-311.3', '84(4Фр)'),
	(9785444450963, '821.133.1-311.3', '84(4Фр)'),
	(9785389087880, '821.111(73)', '84(7Сое)-445'),
	(9785699887750, '821.161.1-31', '84(2Рос=Рус)6-44'),
	(5699041087, '840','84(4Фр)'),
	(9785699486328, '82(1-87)', '84(4Фр)'),
	(9785448426131, '821.133.1-311.3', '84(4Фр)'),
	(9785389130227, '821.135.5-312 Несбё', '84(4Нор)-44'),
	(9785448416804, '821.133.1-311.3', '84(4Фр)'),
	(9785448429460, '821.133.1-311.3', '84(4Фр)'),
	(9785448429477, '821.133.1-311.3', '84(4Фр)'),
	(9785448430015, '821.111-311.3', '84(4Вел)'),
	(9785448428487, '821.133.1-311.3', '84(4Фр)'),
	(9785171169800, '821.111-313.2(73)', '84(7Сое)-44'),
	(9785389129122, '821.135.5-312 Несбё', '84(4Нор)-44'),
	(9785815915367, '82-312.4', '84-44'),
	(9785815915732, '82-312.4', '84(2)'),
	(9785699451944, '82(1-87)', '84(4Вел)'),
	(9785448424847, '821.161.1-312.4', '84(2Рос=Рус)6'),
	(9785448427596, '821.111-311.3', '84(4Вел)'),
	(9785448426902, '821.161.1-312.4', '84(2Рос=Рус)6'),
	(9785170853120, '821.111(73)-313.2', '84(7Сое)-44'),
	(9785448429828, '821.111.1-311.3', '84(4Вел)'),
	(9785448428630, '821.133.1-311.3','84(4Фр)'),
	(9785448428791, '821.161.1-312.4', '84(2Рос=Рус)6'),
	(9785448436895, '821.133.1-311.3','84(4Фр)'),
	(9785389145092, '821.131.1', '84(4Ита)-44'), 
	(9785389106802, '821.131.1', '84(4Ита)-44'),
	(9785444459898, '821.133.1-311.3', '84(4Фр)'),
	(9785448423161, '821.133.1-311.3', '84(4Фр)'),
	(9785448409875, '821.111.1-311.3', '84(4Вел)'),
	(9785446109234, '004.421', '32.973-018'),
	(9785389191594, '821.111(73)', '84(7Сое)-44'),
	(9785448404252, '821.133.1-311.3', '84(4Фр)'),
	(9785448437991, '821.111-311.3', '84(4Вел)');

-- Произведения бывают пишут в сооавторстве, поэтому реализуем связь М-М. 

DROP TABLE IF EXISTS author_books;
CREATE TABLE author_books (
	books_id BIGINT UNSIGNED NOT NULL,
	author_id BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY (books_id, author_id),
	FOREIGN KEY (books_id) REFERENCES books(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (author_id) REFERENCES author(id) ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO 
	author_books (books_id, author_id)
	VALUES
	(1, 3), (2, 4), (3, 1), (4, 2), (5, 2), (6, 5), (7, 5), (8, 3), (9, 6), (10, 7),
	(11, 8), (12, 9), (13, 7), (14, 10), (15, 10), (16, 5), (17, 7), (18, 11), (19, 11), (20, 12),
	(21, 13), (22, 2), (23, 5), (24, 14), (25, 14), (26, 15), (27, 16), (27, 17), (28, 25), (29, 16), (29, 17), (30, 2),
	(31, 1), (32, 7), (33,16), (33, 26), (34, 27), (35, 28), (36, 28), (37, 10), (38, 10), (39, 29), (40, 30),
	(41, 3), (42, 7);

-- Частенько люди берут книжки почитать друг у друга, поэтуму реализуем это через сущность лизинг.

DROP TABLE IF EXISTS leasing;
CREATE TABLE leasing (
	id SERIAL,
	books_id BIGINT UNSIGNED NOT NULL PRIMARY KEY,
	who_takes BIGINT UNSIGNED,
	who_read BIGINT UNSIGNED,
	rental_start_date DATETIME NOT NULL,
	rental_finish_date DATETIME  NOT NULL,
	FOREIGN KEY (books_id) REFERENCES books(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (who_takes) REFERENCES owner(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (who_read) REFERENCES owner(id) ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO 
	leasing (books_id, who_takes, who_read, rental_start_date, rental_finish_date)
	VALUES
	(4, 1, 6, '2020-03-22','2020-05-22' ),
	(16, 1, 7, '2021-02-09','2021-04-09' ),
	(20, 1, 7, '2021-02-09','2021-04-09' ),
	(15, 1, 6, '2021-12-12','2022-02-12' ),
	(8, 1, 9, '2022-05-28','2022-07-28' );
-- Для информации о полном списке произведений в том или ином томе и учета библиографии авторов,
-- создаем таблицу библиографии.  

DROP TABLE IF EXISTS bibliography;
CREATE TABLE bibliography (
	id SERIAL PRIMARY KEY,
	name VARCHAR(150),
	`year` INT UNSIGNED
);

INSERT INTO 
	bibliography (name, `year`)
	VALUES 
	( 'Лига перепуганных мужчин', 1935), ( 'Острие копья', 1934), ( 'Снова убивать', 1936), ( 'Чужак', 2018), ( 'Блейз', 2007),
	( 'Память', 2006), ( 'Пиратский остров', 1868), ( 'Молодые невольники', 1865), ( '1984', 1949), ( 'Скотный двор', 1945),
	( 'Дни в Бирме', 1934), ( 'Да здравствует фикус!', 1936), ( 'Нетопырь', 1997), ( 'Тарканы', 1998), ( 'Только через мой труп', 1940),
	( 'Завещение', 1940), ( 'Черные орхидеи', 1941), ( 'Гостиница тринадцати повешенных', 1866), ( '«Доро́га во Фраанцию», также «Возвращение на родину»', 1887), ( 'Граф де Шантелен', 1864),
	( 'Дарт Плэгас', 2012),
	( 'Писатель и балерина', 2016),
	( 'Дети капитана гранта', 1867),
	( 'Сорок пять', 1847),
	( 'Пьер и гусыня', 1860),
	( 'Волшебный свисток', 1859),
	( 'Юность Пьеро', 1853),
	( 'Белоснежка', 1858),
	( 'Человек, который не мог плакать', 1859),
	( 'Гордячка Тини', 1860),
	( 'Русалочка', 1859),
	( 'Кегельный король', 1859),
	( 'История Щелкунчика', 1844),
	( 'Красношейка', 2000),
	( 'Михаил Строгов, или курьер царя', 1876),
	( 'Горбун, или маленький парижанин', 1857),
	( 'Дуэль', 1908),
	( 'Романтические приключения Джона Кемпа', 1903),
	( 'Капитан черных грешников', 1868),
	( 'Жребий Салема', 1975),
	( 'Пентаграмма', 2003),
	( 'Коронация, или последний из романов', 2000),
	( 'Любовница смерти', 2001),
	( 'Убийство в «Восточном экспрессе»', 1934),
	( 'Немой свидитель', 1937 ),
	( 'Таргитай', 2021),
	( 'Изгнанники', 1893),
	( 'Яфет', 2021),
	( 'Мистер Мерседес', 2014),
	( 'Морской волчонок', 1859),
	( 'Скитальцы Борнео', 1870),
	( 'Ледяной Сфинкс', 1897),
	( 'Вещий Олег', 2021),
	( 'Тайна мага', 1890),
	( 'Атлантида', 1895), 
	( 'Черный Корсар', 1898),
	( 'Королева карибов', 1901),
	( 'Иоланда, дочь Черного Корсара', 1905),
	( 'Корсары Бермудских островов', 1909),
	( 'Поход «Громовержца»', 1910),
	( 'Необычные приключения корсара на озере Шамплейн', 1915),
	( 'Корсиканские братья', 1845),
	( 'Блэк', 1858),
	( 'Робин Гуд', 1860),
	( 'Похищенный', 1886),
	( 'Катриона', 1893),
	( 'Грокаем алгоритмы', 2017),
	( 'Оживший покойник', 1947), ( 'Цветов не посылать', 1948), ( 'Дверь смерти', 1949), ( 'Даже в лучших домах', 1950), ( 'Крылатый пистолет', 1949), ( 'Одной пули достаточно', 1948), ( 'Маскарад для убийста', 1950),
	( 'Великолепная Ориноко', 1898), ( 'Россказни Жана-Мари Кабидуле', 1901), ( 'Скарамуш', 1921);

-- Некоторые произведения могут быть в нескольким книгах, разных издательств. Одно протзведение может
-- быть в нескольких томах. Реализуем через связь М-М. 

DROP TABLE IF EXISTS bibliography_books;
CREATE TABLE bibliography_books (
	bibliography_id BIGINT UNSIGNED NOT NULL,
	books_id BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY (bibliography_id, books_id),
	FOREIGN KEY (bibliography_id) REFERENCES bibliography(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (books_id) REFERENCES books(id) ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO 
	bibliography_books (bibliography_id, books_id)
	VALUES
	(1, 1), (2, 1), (3, 1), (4, 4), (5, 5), (6, 5), (7, 3), (8, 3), (9, 2), (10, 2),
	(11, 2), (12, 2), (13, 6), (14, 7), (15, 8), (16, 8), (17, 8), (18, 9), (19, 10), (20, 10),
	(21, 11), (22, 12), (23, 13), (24, 14), (25, 15), (26, 15), (27, 15), (28, 15), (29, 15), (30, 15),
	(31, 15), (32, 15), (33, 15), (34, 16), (35, 17), (36, 18), (36, 19), (37, 20), (38, 20), (39, 21), (40, 22),
	(41, 23), (42, 24), (43, 25), (44, 26), (45, 26), (46, 27), (47, 28), (48, 29), (49, 30), (50, 31),
	(51, 31), (52, 32), (53, 33), (54, 34), (55, 34), (56, 35), (57, 35), (58, 35), (59, 36), (60, 36),
	(61, 36), (62, 37), (63, 37), (64, 38), (65, 39), (66, 39), (67, 40), (68, 41), (69, 41), (70, 41),
	(71, 41), (72, 41), (73, 41), (74, 41), (75, 42), (76, 42), (77, 43);

-- Так как у произведений, также как и у книг бывает 2 автора, делаем следующую таблицу. 

DROP TABLE IF EXISTS bibliography_author;
CREATE TABLE bibliography_author (
	bibliography_id BIGINT UNSIGNED NOT NULL,
	author_id BIGINT UNSIGNED NOT NULL,
	PRIMARY KEY (bibliography_id, author_id),
	FOREIGN KEY (bibliography_id) REFERENCES bibliography(id) ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY (author_id) REFERENCES author(id) ON UPDATE CASCADE ON DELETE CASCADE
);

INSERT INTO 
	bibliography_author (bibliography_id, author_id)
	VALUES
	(1, 3), (2, 3), (3, 3), (4, 2), (5, 2), (6, 2), (7, 1), (8, 1), (9, 4), (10, 4),
	(11, 4), (12, 4), (13, 5), (14, 5), (15, 3), (16, 3), (17, 3), (18, 6), (19, 7), (20, 7),
	(21, 8), (22, 9), (23, 7), (24, 10), (25, 10),(26, 10), (27, 10), (28, 10), (29, 10), (30, 10),
	(31, 10), (32, 10), (33, 10), (34, 5), (35, 7), (36, 11), (37, 12), (38, 12), (39, 13), (40, 2),
	(41, 5), (42, 14), (43, 14), (44, 15), (45, 15), (46, 16),(46, 17), (47, 25), (48, 16),(48, 17), (49, 2), (50, 1),
	(51, 1), (52, 7), (53, 16), (53, 26), (54, 27), (55, 27), (56, 28), (57, 28), (58, 28), (59, 28), (60, 28), 
	(61, 28), (62, 10), (63, 10), (64, 10), (65, 29), (66, 29), (67, 30), (68, 3), (69, 3), (70, 3),
	(71, 3), (72, 3), (73, 3), (74, 3), (75, 7), (76, 7), (77, 31);